namespace = elven

### Elven Events ###
##	Introduction Events
#			elven.0100		Galadriel Introduction
#			elven.0101		Galadriel decides whether to give the Elessar to Aragorn as a wedding present
#			elven.0102		Aragorn receives the Elessar from Galadriel
#			elven.0150-0152	Parth Celebrant/Lorien events
#			elven.0200		Thranduil Introduction
#			elven.0300		Elrond Introduction
#			elven.0400		Cirdan Introduction
#			elven.0500		Sirgala Introduction (Realms-in-Exile Start)
#			elven.1000 		Maglor Introduction
#			elven.1500-2000 Maglor event chain
#			elven.9999		It burns !




elven.0100 = { # Introduction to Galadriel
	content_source = realms
	type = character_event
	title = elven.0100.t
	desc = elven.0100.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = lorien_day
	}
	right_portrait = {
		character = root
		animation = personality_honorable
	}
	
	option = { 		#The Shadow is rising. We must act. (Offer vassalage to Parth Celebrant)
		name = elven.0100.a
		custom_tooltip = elven.0100.att
		trigger = {
			exists = title:d_parth_celebrant
		}
			#character:lineofguthmunding5 = {
			title:d_parth_celebrant.holder	= {
				if = {
					limit = {
						is_alive = yes
						is_landed = yes
					}
					trigger_event = {
						id = elven.0150
						days = 10
					}
				}
			}
		
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 80
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	
	option = { 		#Yup. Thats me.
		name = elven.0100.b
		custom_tooltip = elven.0100.btt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}	
}

elven.0101 = { #Elessar as a wedding present - Actor
	content_source = realms
	type = character_event
	type = activity_event
	title = elven.0101.t
	desc = elven.0101.desc
	theme = marriage
	override_background = {
		reference = ep2_wedding_ceremony_western
	}
	left_portrait = {
		character = root
		animation = personality_forgiving
	}
	right_portrait = {
		character = character:lineisildur42
		animation = happiness
	}
	
	cooldown = { years = 10 }
	
	trigger = {
		root = character:linefinwe36
		scope:activity.special_guest:spouse_1 = character:lineisildur42
		scope:activity.special_guest:spouse_2 = character:linefinwe30
	}
	
	option = {
		name = elven.0101.a
		character:lineisildur42 = {	
			trigger_event = {
				id = elven.0102
			}
		}
	}
	
	option = {
		name = elven.0101.b
		trigger = { is_ai = no }
		add_piety_level = -1
	}
}

elven.0102 = { #Elessar as a wedding present - Recipient
	type = activity_event
	title = elven.0102.t
	desc = elven.0102.desc
	theme = marriage
	override_background = {
		reference = ep2_wedding_ceremony_western
	}
	right_portrait = {
		character = root
		animation = happiness
	}
	left_portrait = {
		character = character:linefinwe36
		animation = personality_forgiving
	}
	
	option = {
		name = elven.0102.a
		character:linefinwe36 = {
			every_character_artifact = {
				limit = { has_variable = elessar }
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
	}
}

elven.0103 = { #Elessar as a wedding present - Actor
	title = elven.0101.t
	desc = elven.0101.desc
	theme = marriage
	override_background = {
		reference = ep2_wedding_ceremony_western
	}
	left_portrait = {
		character = root
		animation = personality_forgiving
	}
	right_portrait = {
		character = character:lineisildur42
		animation = happiness
	}
	
	option = {
		name = elven.0101.a
		character:lineisildur42 = {
			trigger_event = {
				id = elven.0104
			}
		}
	}
	
	option = {
		name = elven.0101.b
		trigger = { is_ai = no }
		add_piety_level = -1
	}
}

elven.0104 = { #Elessar as a wedding present - Recipient
	title = elven.0102.t
	desc = elven.0102.desc
	theme = marriage
	override_background = {
		reference = ep2_wedding_ceremony_western
	}
	right_portrait = {
		character = root
		animation = happiness
	}
	left_portrait = {
		character = character:linefinwe36
		animation = personality_forgiving
	}
	
	option = {
		name = elven.0102.a
		character:linefinwe36 = {
			every_character_artifact = {
				limit = { has_variable = elessar }
				set_owner = {
					target = root
					history = {
						type = inherited
						recipient = root
					}
				}
			}
		}
	}
}

elven.0150 = { # Parth Celebrant receives elven envoy
	content_source = realms
	type = character_event
	title = elven.0150.t
	desc = elven.0150.desc
	theme = stewardship_duty_focus
	left_portrait = {
		character = root
		animation = personality_proud
	}
	right_portrait = {
		character = character:linefinwe36
		animation = personality_honorable
	}
	
	option = { # We submit, thank you. This will rekindle our claim to Drownholt!
		name = elven.0150.a
		custom_tooltip = elven.0150.att
			character:linefinwe36 = {
				if = {
					limit = {
						is_alive = yes
						is_landed = yes
						has_royal_court = yes
					}
					trigger_event = {
						id = elven.0153
						days = 10
					}
					save_scope_as = parthliege
				}
				if = {
					limit = {
						is_alive = yes
						is_landed = yes
						has_royal_court = no	#fallback if no RC
					}
					trigger_event = {
						id = elven.0151
						days = 10
					}
					save_scope_as = parthliege
				}
			}
			add_piety = 150
			
			add_pressed_claim = title:d_drownholt
			add_pressed_claim = title:c_thorlorien
			root.primary_heir = {
				add_pressed_claim = title:d_drownholt
				add_pressed_claim = title:c_thorlorien
			}
			save_scope_as = parthruler
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			scope:parthruler = {
				change_liege = {
					liege = scope:parthliege
					change = scope:change
				}
				add_opinion = {
					modifier = became_vassal
					target = scope:parthliege
					opinion = 10
				}
			}
			resolve_title_and_vassal_change = scope:change
		
		
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { 		#We won't bow to some fae lady! She was our neighbour for 100 years and never came by to say hi!
		name = elven.0150.b
		custom_tooltip = elven.0150.btt
			character:linefinwe36 = {
				if = {
					limit = {
						is_alive = yes
						is_landed = yes
					}
					trigger_event = {
						id = elven.0152
						days = 5
					}
				}
			}
			add_prestige = 250
			add_piety = -100
		
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

elven.0151 = { # Parth Celebrant submits, Galadriel informed about claim FALLBACK VAR
	content_source = realms
	type = character_event
	title = elven.0151.t
	desc = elven.0151.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = lorien_day
	}
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = title:d_parth_celebrant.holder
		animation = personality_proud
	}
	
	option = { 		#Well thats nice.
		name = elven.0151.a
		
		show_as_tooltip = {
			character:linefinwe36 = {
				save_scope_as = actor
			}
			title:d_parth_celebrant.holder	= {
				add_pressed_claim = title:d_drownholt
				add_pressed_claim = title:c_thorlorien
				root.primary_heir = {
					add_pressed_claim = title:d_drownholt
					add_pressed_claim = title:c_thorlorien
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				scope:recipient = {
					change_liege = {
						liege = scope:actor
						change = scope:change
					}
					add_opinion = {
						modifier = became_vassal
						target = scope:actor
						opinion = 10
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
	}
}

elven.0152 = { # Parth Celebrant doesnt submit, Galadriel informed
	content_source = realms
	type = character_event
	title = elven.0152.t
	desc = elven.0152.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = lorien_day
	}
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = title:d_parth_celebrant.holder
		animation = personality_proud
	}
	
	option = { 		#Well thats rude.
		name = elven.0152.a
	}
}

elven.0153 = { # Parth Celebrant submits, Galadriel informed about claim RC VAR
	content_source = realms
	type = character_event
	title = elven.0153.t
	desc = elven.0153.desc
	type = court_event
	theme = realm
	override_sound = { reference = event:/SFX/Events/Themes/sfx_event_theme_type_generic }
	court_scene = {
		button_position_character = scope:parthruler
		court_event_force_open = yes
		show_timeout_info = no
		should_pause_time = yes
		roles = {
			scope:parthruler = {
				group = petitioners_group
				animation = happiness
			}
		}
	}
	immediate = {
		title:d_parth_celebrant.holder	= {
			save_scope_as = parthruler
		}
	}
	option = { 		#Well thats nice.
		name = elven.0153.a
		show_as_tooltip = {
			character:linefinwe36 = {
				save_scope_as = actor
			}
			title:d_parth_celebrant.holder	= {
				add_pressed_claim = title:d_drownholt
				add_pressed_claim = title:c_thorlorien
				root.primary_heir = {
					add_pressed_claim = title:d_drownholt
					add_pressed_claim = title:c_thorlorien
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				scope:recipient = {
					change_liege = {
						liege = scope:actor
						change = scope:change
					}
					add_opinion = {
						modifier = became_vassal
						target = scope:actor
						opinion = 10
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
	}
}

elven.0200 = { # Introduction to Thranduil.
	content_source = realms
	type = character_event
	title = elven.0200.t
	desc = elven.0200.desc
	theme = stewardship_duty_focus
	override_background = {
		reference = throne_room_thranduils_halls
	}
	right_portrait = {
		character = root
		animation = personality_proud
	}
	
	option = { 
		name = elven.0200.a
	}
}

elven.0300 = { # Introduction to Elrond
	content_source = realms
	type = character_event
	title = elven.0300.t
	desc = elven.0300.desc
	theme = stewardship_duty_focus
	right_portrait = {
		character = root
		animation = personality_proud
	}
	
	option = { 
		name = elven.0300.a
		hidden_effect = {
			province:4337 = {
				add_building = elven_markets_04
				add_building = elven_guild_04
			}
		}
	}
}

elven.0400 = { # Introduction to Cirdan
	content_source = realms
	type = character_event
	title = elven.0400.t
	desc = elven.0400.desc
	theme = stewardship_duty_focus
	right_portrait = {
		character = root
		animation = personality_proud
	}
	
	option = { 
		name = elven.0400.a
	}
}

elven.0500 = { # Introduction to Sirgala
	content_source = realms
	type = character_event
	title = elven.0500.t
	desc = elven.0500.desc
	theme = stewardship_duty_focus
	right_portrait = {
		character = root
		animation = personality_proud
	}
	
	option = { # The time of Sirgala has passed
		name = elven.0500.a
		custom_tooltip = elven.0500.a.tt

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # 
		name = elven.0500.b
		custom_tooltip = elven.0500.b.tt

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

elven.1000 = { # Maglor Introduction
	content_source = realms
	type = character_event
	title = elven.1000.t
	desc = elven.1000.desc
	theme = stewardship_wealth_focus
	right_portrait = {
		character = root
		animation = disgust
	}
	override_background = { reference = elven_town }

	option = { # Rouse himself
		name = elven.1000.a

		trigger_event = {
			id = elven.1500
			months = { 2 4 }
		}

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	
	option = { # Remain Melancholy 
		name = elven.1000.b

		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

elven.1500 = { # Rouse from slumber
	content_source = realms
	type = character_event
	title = elven.1500.t
	desc = elven.1500.desc
	theme = mental_health

	right_portrait = {
		character = root
		animation = marshal
	}
	override_background = {
		reference = elven_town
	}

	option = { # Crusade Against Darkness
		name = elven.1500.a

		set_variable = crusade_against_darkness
	}

	option = { # Kingship by Seniority
		name = elven.1500.b
		
		set_variable = fourth_kin_slaying
	}
}

### 4th Kin-slaying route | Crusade against darkness, elven.1600 onwards ###
elven.1555 = { # Send letter to loyalist asking for support
	type = letter_event
	sender = character:linefinwe11

	opening = {
		desc = elven.1555.opening
	}

	desc = elven.1555.desc


	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = elven.1555
			days = 1
		}
	}

	option = { # Accept | Join Maglor
		name = elven.1555.a
		set_variable = joined_maglor

		
		ai_chance = {
			base = 100
		}
	}	
	
	option = { # Decline
		name = elven.1555.b

		
		ai_chance = {
			base = 0 
		}
	}
}

elven.1556 = { # Start war against Lindon
	content_source = realms
	type = character_event
	title = elven.1556.t
	desc = elven.1556.desc
	theme = death
	right_portrait = {
		character = root
		animation = fear
	}
	
	option = { 
		name = elven.1556.a

		start_war = {
			casus_belli = fourth_kinslaying_cb
			target = title:e_lindon.holder
			target_title = title:e_lindon
		}
		title:e_lindon.holder = {
			every_character_war = {
				limit = { using_cb = fourth_kinslaying_cb }
				add_to_list = war_to_join
			}
			every_vassal_or_below = {
				limit = { has_variable = joined_maglor }
				every_in_list = {
					list = war_to_join
					limit = { NOT = { is_defender = prev } }
					hidden_effect = { set_called_to = prev }
					add_attacker = prev
				}
			}
			every_vassal_or_below = {
				limit = { culture = culture:sindar }
				every_in_list = {
					list = war_to_join
					limit = { NOT = { is_attacker = prev } }
					hidden_effect = { set_called_to = prev }
					add_defender = prev
				}
			}
		}
	}
}

elven.1560 = { # The Fourth Kinslaying | Maglor wins the war against Cirdan
	content_source = realms
	type = character_event
	title = elven.1560.t
	desc = elven.1560.desc
	theme = death
	right_portrait = {
		character = root
		animation = fear
	}
	
	option = { 
		name = elven.1560.a
	}
}

elven.1565 = { # Maglor loses the war against Cirdan
	content_source = realms
	type = character_event
	title = elven.1560.t
	desc = elven.1560.desc
	theme = death
	right_portrait = {
		character = root
		animation = fear
	}
	
	option = { 
		name = elven.1560.a
		
		death = { 
			death_reason = death_execution # Executed 
			killer = character:lineofcirdan		
		}
	}
}

### Crusade against darkness route | 4th Kin-slaying, elven.1555 onwards ###
elven.1600 = { # Crusade against Darkness
	content_source = realms
	type = character_event
	title = elven.1600.t
	desc = elven.1600.desc
	theme = martial_authority_focus
	right_portrait = {
		character = root
		animation = marshal
	}
	
	override_background = {
		reference = docks_elf
	}
	
	option = { 
		name = elven.1600.a

		set_variable = maglor_defensive

		trigger_event = { # Shield of the Free Peoples | Defensive
			id = elven.1601
			days = { 15 30 }
		}
	}
	option = { # Strike Heart of Enemy | Aggresive
		name = elven.1600.b

		set_variable = maglor_aggresive
		
		trigger_event = {
			id = elven.1602
			days = { 5 10 }
		}
	}
}

elven.1601 = { # Shield of the Free Peoples starting event | 
	content_source = realms
	type = character_event
	title = elven.1601.t
	desc = elven.1601.desc
	theme = martial_authority_focus
	right_portrait = {
		character = root
		animation = personality_bold
	}
	override_background = {
		reference = eregion_city
	}
	
	option = { 
		name = elven.1601.a
		set_variable = cannot_cancel_travel

		start_travel_plan = {
			destination = title:c_ost_in_edhil.title_province
			on_arrival_event = elven.1605
			return_trip = no
			players_use_planner = no
			on_arrival_on_action 
			on_arrival_destinations = all
		}
	}
}

elven.1602 = { # Strike the Heart of the Enemy starting event | Go to Edhellond
	content_source = realms
	type = character_event
	title = elven.1602.t
	desc = elven.1602.desc
	theme = martial_authority_focus
	right_portrait = {
		character = root
		animation = fear
	}
	
	option = { 
		name = elven.1602.a
		set_variable = cannot_cancel_travel

		start_travel_plan = {
			destination = title:c_edhellond.title_province
			on_arrival_event = elven.1604
			return_trip = no
			players_use_planner = no
			on_arrival_destinations = first
		}
	}
}

elven.1604 = { # Hidden event | Swap titles for Edhellond
	hidden = yes

	immediate = {
		remove_variable = cannot_cancel_travel

		title:c_edhellond = { # Remove any human buildings
			remove_building_any_level = { BUILDING = caravanserai }
			remove_building_any_level = { BUILDING = watermills }
			remove_building_any_level = { BUILDING = windmills }
			remove_building_any_level = { BUILDING = common_tradeport }
			remove_building_any_level = { BUILDING = pastures }
			remove_building_any_level = { BUILDING = hunting_grounds }
			remove_building_any_level = { BUILDING = orchards }
			remove_building_any_level = { BUILDING = farm_estates }
			remove_building_any_level = { BUILDING = cereal_fields }
			remove_building_any_level = { BUILDING = logging_camps }
			remove_building_any_level = { BUILDING = peat_quarries }
			remove_building_any_level = { BUILDING = hill_farms }
			remove_building_any_level = { BUILDING = elephant_pens }
			remove_building_any_level = { BUILDING = plantations }
			remove_building_any_level = { BUILDING = quarries }
			remove_building_any_level = { BUILDING = guild_halls }
			remove_building_any_level = { BUILDING = ramparts }
			remove_building_any_level = { BUILDING = curtain_walls }
			remove_building_any_level = { BUILDING = watchtowers }
			remove_building_any_level = { BUILDING = hill_forts }
			remove_building_any_level = { BUILDING = wind_furnace }
			remove_building_any_level = { BUILDING = workshops }
			remove_building_any_level = { BUILDING = horse_pastures }
			remove_building_any_level = { BUILDING = hillside_grazing }
			remove_building_any_level = { BUILDING = warrior_lodges }
			remove_building_any_level = { BUILDING = military_camps }
			remove_building_any_level = { BUILDING = regimental_grounds }
			remove_building_any_level = { BUILDING = outposts }
			remove_building_any_level = { BUILDING = barracks }
			remove_building_any_level = { BUILDING = camel_farms }
			remove_building_any_level = { BUILDING = stables }
			remove_building_any_level = { BUILDING = smiths }
			remove_building_any_level = { BUILDING = hillside_grazing }
		}
		every_province = { # Changes province to elven holding
			limit = { 
				county = title:c_edhellond
				has_holding = yes
			}
			set_holding_type = elven_holding			
		}
		
		## Grant Maglor Edhellond

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		title:c_edhellond = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}
		
		becomes_independent = { change = scope:title_change }

		resolve_title_and_vassal_change = scope:title_change

		title:c_edhellond = {
			set_county_culture = root.culture
			set_county_faith = root.faith
		}
		province:420 = {
			add_building = elven_forges_01
			add_building = wonder_edhellond_03
			add_building = elven_settlement_02
		}
		## Grant Himring to Maglor Friend

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		title:c_himring = {
			change_title_holder = {
				holder = character:lineoflauriel
				change = scope:title_change
			}
		}
		
		resolve_title_and_vassal_change = scope:title_change

		get_title = title:k_feanor_host
	}
}

elven.1605 = { # Hidden event | Swap titles for Eregion
	hidden = yes

	immediate = {
		remove_variable = cannot_cancel_travel

		every_province = { # Changes province to elven holding
			limit = { 
				county = title:c_ost_in_edhil
				has_holding = yes
			}
			set_holding_type = elven_holding			
		}
		
		## Grant Maglor Edhellond

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		title:c_ost_in_edhil = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}

		if = {
			limit = {
				title:e_lindon.holder = {
					any_vassal_or_below = {
						is_elf = yes 
						has_variable = volunteers_sent
						count > 8
					}
				}
			}
			every_province = { # Changes province to elven holding
				limit = { 
					county = title:c_sirannon
					has_holding = yes
				}
				set_holding_type = elven_holding			
			}
			title:c_sirannon = {
				change_title_holder = {
					holder = root
					change = scope:title_change
				}
			}
		}

		if = {
			limit = {
				title:e_lindon.holder = {
					has_variable = volunteers_sent
					is_elf = yes 
					any_vassal_or_below = {
						is_elf = yes 
						has_variable = volunteers_sent
						count > 16
					}
				}
			}
			every_province = { # Changes province to elven holding
				limit = { 
					county = title:c_arabrand
					has_holding = yes
				}
				set_holding_type = elven_holding			
			}
			title:c_arabrand = {
				change_title_holder = {
					holder = root
					change = scope:title_change
				}
			}
			get_title = title:d_eregion
		}

		becomes_independent = { change = scope:title_change }

		resolve_title_and_vassal_change = scope:title_change

		title:c_ost_in_edhil = {
			set_county_culture = root.culture
			set_county_faith = root.faith
		}
		title:c_arabrand = {
			set_county_culture = root.culture
			set_county_faith = root.faith
		}
		title:c_sirannon = {
			set_county_culture = root.culture
			set_county_faith = root.faith
		}

		## Grant Himring to Maglor Friend

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		title:c_himring = {
			change_title_holder = {
				holder = character:lineoflauriel
				change = scope:title_change
			}
		}
		
		resolve_title_and_vassal_change = scope:title_change

		trigger_event = {
			id = elven.1800
			days = { 15 30 }
		}
	}
}

elven.1606 = { # Letter Event, Request troops from Lindon
	type = letter_event
	sender = character:linefinwe11

	opening = {
		desc = elven.1606.opening
	}

	desc = elven.1606.desc

	immediate = {
		root = { save_scope_as = elven_ruler }
		primary_title = { save_scope_as = elven_ruler_title }
	}

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = elven.1606
			days = 1
		}
	}
	
	option = {
		name = elven.1606.a

		character:linefinwe11 = {
			send_interface_toast = {
				title = elven.1606.toast_full.t

				maglor_crusade_elven_warriors = { SUPPORT = 2 }
			}
		}

		ai_chance = {
			base = 25
			
			modifier = { # Noldor are bloodthirsty
				culture = culture:noldor
				add = 20
			}
		}
	}
	
	option = {
		name = elven.1606.b

		character:linefinwe11 = {
			send_interface_toast = {
				title = elven.1606.toast_half.t

				maglor_crusade_elven_warriors = { SUPPORT = 1 }
			}
		}

		ai_chance = {
			base = 15
			
			modifier = { # Noldor are bloodthirsty
				culture = culture:noldor
				add = 10
			}
		}
	}
	
	option = {
		name = elven.1606.c

		ai_chance = {
			base = 35
			
			modifier = { # Noldor are bloodthirsty
				culture = culture:noldor
				subtract = 5
			}
		}
	}
}

elven.1607 = {
	hidden = yes
	immediate = {
		
		send_interface_toast = {
			title = elven.1606.toast_full.t
			random_list = {
				5 = {
					spawn_army = {
						name = elven.maglor_help_songsmiths
						men_at_arms = {
							type = song_smiths
							stacks = 1
						}
						location = root.capital_province
					}
				}
				2 = {
					spawn_army = {
						name = elven.maglor_help_songsmiths
						men_at_arms = {
							type = song_smiths
							stacks = 2
						}
						location = root.capital_province
					}
				}
				1 = {
					spawn_army = {
						name = elven.maglor_help_songsmiths
						men_at_arms = {
							type = song_smiths
							stacks = 3
						}
						location = root.capital_province
					}
				}
			}
		}
	}
}

### Strike the Heart of the Enemy event line ###

# Letter to gondorian ruler to contribute troops to Maglor Umbar war
elven.1700 = {
	type = letter_event
	sender = character:linefinwe11

	opening = {
		desc = elven.1700.opening
	}

	desc = elven.1700.desc

	immediate = {
		root = { save_scope_as = gondor_ruler }
	}

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = elven.1700
			days = 1
		}
	}
	
	option = { 
		name = elven.1700.a

		add_to_global_variable_list = {
			name = gondorian_ruler_supported_maglor
			target = root
		}

		character:linefinwe11 = { trigger_event = elven.1705 }

		ai_chance = {
			base = 0
			
			modifier = { 
				has_trait = brave
				add = 20
			}
			modifier = { 
				has_trait = zealous
				add = 20
			}
			modifier = { 
				OR = {
					title:k_belfalas = {
						any_de_jure_county = {
							holder = scope:gondor_ruler
						}
					}
					title:k_anfalas = {
						any_de_jure_county = {
							holder = scope:gondor_ruler
						}
					}
				}
				add = 20
			}
			modifier = { 
				has_trait = greedy
				add = 20
			}
			modifier = { 
				has_trait = vengeful
				add = 20
			}
		}
	}
	
	option = { 
		name = elven.1700.b

		
		ai_chance = {
			base = 0
			
			modifier = { 
				has_trait = craven
				add = 10
			}
			modifier = { 
				has_trait = lazy
				add = 10
			}
			modifier = { 
				has_trait = paranoid
				add = 10
			}
		}
	}
}

elven.1705 = { # Spawns armies for Maglor
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				scope:gondor_ruler = { has_title = title:k_belfalas }
			}
			character:linefinwe11 = {
				send_interface_toast = {
					title = elven.1705.event_troops.toast
	
					random_list = {
						1 = {
							spawn_army = {
								name = elven.1705.event_troops
								men_at_arms = {
									type = wardens_tirith_aear
									stacks = 1
								}
								location = root.capital_province
								origin = scope:gondor_ruler.primary_title.capital_province
							}
							spawn_army = {
								name = elven.1705.event_troops
								men_at_arms = {
									type = swan_knights
									stacks = 1
								}
								location = root.capital_province
								origin = scope:gondor_ruler.primary_title.capital_province
							}
						}
						2 = {
							spawn_army = {
								name = elven.1705.event_troops
								location = root.capital_province
								levies = 100
								origin = scope:gondor_ruler.primary_title.capital_province
							}
						}
					}

					random = {
						chance = 50

						if = {
							limit = {
								any_in_global_list = {
									variable = gondorian_ruler_supported_maglor

									this = {
										any_knight = {
											maglor_aggresive_gondorian_knight_trigger = { SAVED_SCOPE = gondor_ruler }
										}
									}
								}
							}
							every_in_global_list = {
								variable = gondorian_ruler_supported_maglor

								random_knight = {
									limit = {
										maglor_aggresive_gondorian_knight_trigger = { SAVED_SCOPE = gondor_ruler }
									}
									set_employer = character:linefinwe11
									add_to_global_variable_list = {
										name = potential_gondorian_governors
										target = this
									}
								}
							}
						}
					}
				}
			}
		}
		else = {
			character:linefinwe11 = {
				send_interface_toast = {
					title = elven.1705.event_troops.toast

					random_list = {
						1 = {
							spawn_army = {
								name = elven.1705.event_troops
								men_at_arms = {
									type = gondorian_footmen
									stacks = 1
								}
								location = root.capital_province
								origin = scope:gondor_ruler.primary_title.capital_province
							}
							spawn_army = {
								name = elven.1705.event_troops
								men_at_arms = {
									type = gondorian_bowmen
									stacks = 1
								}
								location = root.capital_province
								origin = scope:gondor_ruler.primary_title.capital_province
							}
						}
						2 = {
							spawn_army = {
								name = elven.1705.event_troops
								location = root.capital_province
								levies = 100
								origin = scope:gondor_ruler.primary_title.capital_province
							}
						}
					}
					
					random = {
						chance = 33

						if = {
							limit = {
								any_in_global_list = {
									variable = gondorian_ruler_supported_maglor

									any_knight = {
										maglor_aggresive_gondorian_knight_trigger = { SAVED_SCOPE = gondor_ruler }
									}
								}
							}
							every_in_global_list = {
								variable = gondorian_ruler_supported_maglor

								random_knight = {
									limit = {
										maglor_aggresive_gondorian_knight_trigger = { SAVED_SCOPE = gondor_ruler }
									}
									set_employer = character:linefinwe11
									add_to_global_variable_list = {
										name = potential_gondorian_governors
										target = this
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

elven.1710 = { # Starts war against Umbar
	content_source = realms
	type = character_event
	title = elven.1710.t
	desc = elven.1710.desc
	theme = war
	right_portrait = {
		character = root
		animation = marshal
	}
	override_background = {
		reference = docks_elven
	}
	
	option = { 
		name = elven.1710.a

		if = {
			limit = { exists = title:e_umbar.holder }
			start_war = {
				casus_belli = maglor_umbar_cb
				target = title:e_umbar.holder
				target_title = title:d_umbar
			}
		} else = {
			start_war = {
				casus_belli = maglor_umbar_cb
				target = title:k_umbar.holder
				target_title = title:d_umbar
			}
		}
	}
}

elven.1715 = { # Event if win against Umbar
	content_source = realms
	type = character_event
	title = elven.1715.t
	desc = elven.1715.desc
	theme = war
	right_portrait = {
		character = root
		animation = marshal
	}
	override_background = {
		reference = docks_adunai
	}
	
	widget = {
		is_shown = {}
		
		gui = "umbar_maglor_option_select_widget"
		container = "custom_widgets_container"  
		controller = event_chain_progress
	}
	
	option = {
		name = elven.1715.a
		set_variable = CB_region_locked
		set_variable = won_against_umbar 
		if = {
			limit = {
				has_variable = appoint_governor
				NOT = { has_variable = raze_umbar } 
			}
			custom_tooltip = "elven.1715.a.event_troops_full.tt"
		}
		else_if = {
			limit = {
				has_variable = appoint_governor
				has_variable = raze_umbar
			}
			custom_tooltip = "elven.1715.a.event_troops_half.tt"
		}
		else = { custom_tooltip = "elven.1715.a.event_troops_none.tt" }
		if = {
			limit = { has_variable = raze_umbar }
			custom_tooltip = "elven.1715.a.upgrade_edhellond.tt"
		}


		if = {
			limit = { has_variable = appoint_governor }
			trigger_event = elven.1720
		}
		if = {
			limit = { has_variable = raze_umbar }
			trigger_event = elven.1726
			trigger_event = elven.1727 # Upgrades Edhellond
		}
		else = { trigger_event = elven.1725 }
		
		remove_variable = maglor_umbar_event
	}
}

elven.1720 = { # hidden event to appoint governors
	hidden = yes 
	immediate = {
		
		every_in_global_list = { # Someone from appropriate house that supported Maglor
			variable = gondorian_ruler_supported_maglor
			limit = {
				any_in_global_list = {
					variable = gondorian_ruler_supported_maglor 
					this = prev
				}
			}
			save_temporary_scope_as = gondor_ruler
			dynasty = {
				random_dynasty_member = {
					limit = {
						NOT = {
							any_in_global_list = {
								variable = potential_gondorian_governors 
								this = prev
							}
						}
						is_ruler = no
						is_adult = yes
						NOT = { is_primary_heir_of = scope:gondor_ruler }
					}
					save_temporary_scope_as = new_gondor_ruler
				}
			}
			
			add_to_global_variable_list = {
				name = replacement_governors
				target = scope:new_gondor_ruler
			}
		}

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		title:e_umbar = {
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_duchy

					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder ?= character:linefinwe11
					}
				}
				add_to_list = duchy_titles_in_umbar
			}
		}

		every_in_global_list = {
			variable = potential_gondorian_governors
			limit = { is_alive = no }
			remove_list_global_variable = { # Remove knight from available governors
				name = potential_gondorian_governors
				target = this
			}
		}

		while = { # While loop that gives out duchy titles to Gondor knights until list is exhausted
			limit = {
				any_in_global_list = {
					variable = potential_gondorian_governors
					exists = this
				}
			}
			random_in_list = { # Take random duchy to be handed out
				list = duchy_titles_in_umbar
				random_in_global_list = { # Take random gondorian knight to hand duchy too
					variable = potential_gondorian_governors
					limit = { is_alive = yes }
					save_scope_as = new_holder
					remove_list_global_variable = { # Remove knight from available governors
						name = potential_gondorian_governors
						target = this
					}
				}
				every_de_jure_county = { # Give every de jure title of duchy to knight
					limit = { de_jure_liege = prev }
					
					change_title_holder = {
						holder = scope:new_holder
						change = scope:title_change
					}
				}
				change_title_holder = {
					holder = scope:new_holder
					change = scope:title_change
				}
				remove_from_list = duchy_titles_in_umbar # Remove current duchy from available duchies
			}
		}

		if = { # Generate some random gondorian rulers
			limit = { any_in_list = { list = duchy_titles_in_umbar } }
			every_in_list = {
				list = duchy_titles_in_umbar
				random_in_global_list = {
					variable = replacement_governors
					save_scope_as = new_holder
					remove_list_global_variable = {
						name = replacement_governors
						target = this
					}
				}
				every_de_jure_county = { # Associated county titles
					limit = { de_jure_liege = prev }
					
					change_title_holder = {
						holder = scope:new_holder
						change = scope:title_change
					}
				}
				change_title_holder = {
					holder = scope:new_holder
					change = scope:title_change
				}
			}
		}

		resolve_title_and_vassal_change = scope:title_change
	}
}

elven.1725 = { # hidden event to recieve all troops from umbar
	hidden = yes 
	
	trigger = {
		trigger_if = {
			limit = { has_variable = maglor_umbar_event_troops }
			var:maglor_umbar_event_troops < 4
		}
	}

	immediate = {
		send_interface_toast = {
			title = elven.1725.toast

			spawn_army = {
				name = elven.umbar_marines
				men_at_arms = {
					type = gondorian_marines
					stacks = 2
				}
				location = root.capital_province
			}
		}

		if = {
			limit = { 
				NOT = { has_variable = maglor_umbar_event_troops }
			}
			set_variable = {
				name = maglor_umbar_event_troops
				value = 1
			}
		}
		else = {
			change_variable = {
				name = maglor_umbar_event_troops
				add = 1
			}
		}

		trigger_event = {
			id = elven.1725
			months = 6
		}
	}
}

elven.1726 = { # hidden event to recieve half troops form umbar
	hidden = yes 
	
	trigger = {
		trigger_if = {
			limit = { has_variable = maglor_umbar_event_troops }
			var:maglor_umbar_event_troops < 4
		}
	}

	immediate = {
		
		send_interface_toast = {
			title = elven.1725.toast

			spawn_army = {
				name = elven.umbar_marines
				men_at_arms = {
					type = gondorian_marines
					stacks = 1
				}
				location = root.capital_province
			}
		}

		if = {
			limit = { 
				NOT = { has_variable = maglor_umbar_event_troops }
			}
			set_variable = {
				name = maglor_umbar_event_troops
				value = 1
			}
		}
		else = {
			change_variable = {
				name = maglor_umbar_event_troops
				add = 1
			}
		}

		trigger_event = {
			id = elven.1726
			months = 6
		}
	}
}

elven.1727 = { # Hidden event to upgrade Edhellond
	hidden = yes

	immediate = {
		title:c_edhellond = { change_development_level = 5 } 
		province:420 = { add_building = elven_settlement_03 }
	}
}

elven.1730 = {
	type = letter_event
	sender = character:linefinwe11

	opening = {
		desc = elven.1730.opening
	}

	desc = elven.1730.desc

	immediate = { save_scope_as = gondor_ruler }

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = elven.1730
			days = 1
		}
	}
	
	option = {
		name = elven.1730.a

		character:linefinwe11 = {
			send_interface_toast = {
				title = elven.1730.event_troops.toast

				random_list = {
					1 = {
						spawn_army = {
							name = elven.1730.event_troops
							men_at_arms = {
								type = gondorian_footmen
								stacks = 1
							}
							location = root.capital_province
							origin = scope:gondor_ruler.primary_title.capital_province
						}
						spawn_army = {
							name = elven.1730.event_troops
							men_at_arms = {
								type = gondorian_bowmen
								stacks = 1
							}
							location = root.capital_province
							origin = scope:gondor_ruler.primary_title.capital_province
						}
					}
					3 = {
						spawn_army = {
							name = elven.1730.event_troops
							location = root.capital_province
							levies = 100
							origin = scope:gondor_ruler.primary_title.capital_province
						}
					}
				}
			}
		}
	}
	
	option = {
		name = elven.1730.b
	}
}

elven.1735 = { # Dynasty Rises in Amrun | Demands sent to current Amrun ruler
	content_source = realms
	type = character_event
	title = elven.1735.t
	desc = elven.1735.desc
	theme = stewardship_duty_focus

	right_portrait = {
		character = root
		animation = personality_proud
	}
	
	left_portrait = {
		character = scope:nadi_manye_leader
		animation = marshal
	}

	immediate = {
		every_held_title = {
			limit = { tier = tier_county }
			add_to_list = target_titles_county
		}

		every_held_title = {	
			limit = { tier = tier_duchy }
			add_to_list = target_titles_duchy
		}

		create_character = {
			template = maglor_nadi_manye_leader
			location = root.capital_province
			save_scope_as = nadi_manye_leader
		}

		scope:nadi_manye_leader = { set_variable = nadi_manye_war_leader }
	}

	option = { # Give all of your titles to new dynasty
		name = elven.1735.a
		
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		every_in_list = {
			list = target_titles_county
			
			change_title_holder = {
				holder = scope:nadi_manye_leader
				change = scope:title_change
			}
		}
		every_in_list = {
			list = target_titles_duchy
			
			change_title_holder = {
				holder = scope:nadi_manye_leader
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		character:linefinwe11 = {
			trigger_event = {
				id = elven.1745
				days = { 10 15 }
			} 
		}
	}

	option = { # Give all duchy titles + Amrun away
		trigger = { # Have more than 2 counties
			any_in_list = {
				list = target_titles_county
				count > 1
			}
		}
		
		random_in_list = {
			list = target_titles_county
			limit = {
				NOT = { this = title:c_amrun }
			}
			remove_from_list = target_titles_county
		}

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		every_in_list = {
			list = target_titles_county

			limit = {
				holder = { any_held_title = { count > 1 } }
			}
			change_title_holder = {
				holder = scope:nadi_manye_leader
				change = scope:title_change
			}
		}
		every_in_list = {
			list = target_titles_duchy
			
			change_title_holder = {
				holder = scope:nadi_manye_leader
				change = scope:title_change
			}
		}
		
		change_liege = {
			liege = scope:nadi_manye_leader
			change = scope:title_change
		}
		resolve_title_and_vassal_change = scope:title_change

		character:linefinwe11 = {
			trigger_event = {
				id = elven.1745
				days = { 10 15 }
			} 
		}

		name = elven.1735.b
	}

	option = { # Resist against dynasty
		name = elven.1735.c

		if = {
			limit = {
				title:c_amrun.holder = { highest_held_title_tier = tier_duchy }
			}
			
			start_war = {
				casus_belli = duchy_conquest_cb
				target = title:c_amrun.holder
				target_title = title:c_amrun.holder.primary_title
			}
		}
		else = {
			start_war = {
				casus_belli = county_conquest_cb
				target = title:c_amrun.holder
				target_title = title:c_amrun.holder.primary_title
			}
		}

		character:linefinwe11 = {
			trigger_event = {
				id = elven.1740
				days = { 10 15 }
			} 
		}
	}
}

elven.1740 = { # Maglor gets message to join war with Nadi-Manye rebels
	type = letter_event
	sender = character:linefinwe11

	opening = {
		desc = elven.1740.opening
	}

	desc = elven.1740.desc


	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		trigger_event = {
			id = elven.1740
			days = 1
		}
	}

	option = { # Accept | Join War as attacker
		name = elven.1740.a

		title:c_amrun.holder = {
			every_character_war = {
				limit = {
					primary_defender = title:c_amrun.holder
					any_war_attacker = { has_variable = nadi_manye_war_leader }
				}
				primary_attacker = { set_variable = maglor_joined_war }
				add_attacker = root
			}
		}
		
		ai_chance = {
			base = 100
		}
	}	
	
	option = { # Decline | Decline War
		name = elven.1555.b
		
		ai_chance = {
			base = 0 
		}
	}
}

elven.1745 = { # Maglor gets choice to make Nadi-Manye tributaries
	content_source = realms
	type = character_event
	title = elven.1745.t
	desc = elven.1745.desc
	theme = stewardship_duty_focus

	right_portrait = {
		character = root
		animation = personality_proud
	}

	left_portrait = {
		character = title:c_amrun.holder
		animation = personality_proud
	}
	
	option = { # Accept Rebel Leader tributary status
		name = elven.1745.a
		make_tributary = {
			TYPE = tributary_permanent
			SUZERAIN = character:linefinwe11
			TRIBUTARY = title:c_amrun.holder
		}
		set_variable = nadi_manye_tributary
	}
	option = { # Decline, take resources back to Edhellond
		name = elven.1745.b

		province:420 = {
			add_next_building_tier_effect = { BUILDING = elven_settlement }
		}
	}

	after = {
		trigger_event = elven.1750
	}
}

elven.1750 = { # Toast event to give Maglor Haruzan Event Troops
	trigger = {
		trigger_if = {
			limit = { has_variable = maglor_haruzan_event_troops }
			var:maglor_haruzan_event_troops < 4
		}
	}
	immediate = {
	

		if = {
			limit = { 
				NOT = { has_variable = maglor_haruzan_event_troops }
			}
			set_variable = {
				name = maglor_umbar_event_troops
				value = 1
			}
		}
		else = {
			change_variable = {
				name = maglor_umbar_event_troops
				add = 1
			}
		}

		send_interface_toast = {
			title = elven.1740.event_troops
			
			if = {
				limit = { has_variable = nadi_manye_tributary }
				random_list = {
					1 = {
						spawn_army = {
							name = elven.1740.event_troops
							men_at_arms = {
								type = desert_javelineers
								stacks = 1
							}
							location = root.capital_province
						}
					}
					1 = {
						spawn_army = {
							name = elven.1740.event_troops
							men_at_arms = {
								type = desert_spearmen
								stacks = 1
							}
							location = root.capital_province
						}
					}
				}
			}
			else = {
				random_list = {
					2 = {}
					1 = {
						spawn_army = {
							name = elven.1740.event_troops
							men_at_arms = {
								type = desert_javelineers
								stacks = 1
							}
							location = root.capital_province
						}
					}
					1 = {
						spawn_army = {
							name = elven.1740.event_troops
							men_at_arms = {
								type = desert_spearmen
								stacks = 1
							}
							location = root.capital_province
						}
					}
				}
			}
		}
	}

	after = {
		trigger_event = {
			id = elven.1750
			months = { 4 6 }
		}
	}
}

### Shield of the Free Peoples ###

elven.1800 = { # Probing investigation into Khazad-dum
	content_source = realms
	type = character_event
	title = elven.1800.t
	desc = elven.1800.desc
	theme = intrigue

	right_portrait = {
		character = root
		animation = personality_bold
	}

	override_background = {
		reference = durins_door
	}
	
	option = { 
		name = elven.1800.a

		trigger_event = {
			id = elven.1806
			days = { 45 60 }
		}
	}
}

elven.1805 = { # Maglor senses the Balrog
	content_source = realms
	type = character_event
	title = elven.1805.t
	desc = elven.1805.desc
	theme = skull
	right_portrait = {
		character = root
		animation = personality_proud
	}

	override_background = {
		reference = halls
	}

	option = { 
		name = elven.1805.a
		
		# destination = title:c_edhellond.title_province
		start_travel_plan = {
			destination = title:c_imladris.title_province
			destination = title:c_hall_of_a_thousand_pillars.title_province
			destination = root.capital_county.title_province
			on_arrival_on_action = maglor_khazad_dum_on_action
			return_trip = no
			players_use_planner = no
			on_arrival_destinations = all
		}
	}
}

elven.1806 = { # Generic event while searching Khazad-dum as Maglor
	content_source = realms
	type = character_event
	title = elven.1806.t
	desc = elven.1806.desc
	theme = skull
	right_portrait = {
		character = root
		animation = personality_bold
	}

	left_portrait = {
		character = scope:dwarven_leader
		animation = sick
		# triggered_outfit = { # Figure this out later
		# 	outfit_tags = { dwarf_war_steel }
		# }
	}

	override_background = {
		reference = halls
	}

	immediate = {
		create_character = {
			template = mag_beard_leader
			location = root.capital_province
			save_scope_as = dwarven_leader
		}

		if = {
			limit = { 
				NOT = { has_variable = searched_khazad_dum }
			}
			set_variable = {
				name = searched_khazad_dum
				value = 1
			}
		}
		else = {
			change_variable = {
				name = searched_khazad_dum
				add = 1
			}
		}
	}

	option = { 
		name = elven.1806.a

		random_list = {
			33 = {	
				custom_tooltip = elven.1806.a.tt.1
				character:linefinwe11 = {
					send_interface_toast = {
						title = elven.1806.a.tt.1
		
						scope:dwarven_leader = {
							set_employer = root
							set_knight_status = force
						}
					}
				}
			}
			33 = {
				custom_tooltip = elven.1806.a.tt.2
				
				character:linefinwe11 = {
					send_interface_toast = {
						title = elven.1806.event_troops
		
						spawn_army = {
							name = elven.1806.event_troops
							men_at_arms = {
								type = longbeard_heavy_infantry
								stacks = 1
							}
							location = root.capital_province
						}
					}
				}
			}
			33 = {
				custom_tooltip = elven.1806.a.tt.3
				title:c_ost_in_edhil = {
					add_county_modifier = {
						modifier = rebuilding_ost_in_edhil
						years = 5
					}
				}
			}
		}
	}

	after = {
		hidden_effect = {
			random_list = {
				20 = {
					modifier = {
						add = 25
						multiply = var:searched_khazad_dum
					}
					trigger_event = {
						id = elven.1805
						days = { 10 20 }
					}
				}
				80 = {
					modifier = {
						subtract = 25
						multiply = var:searched_khazad_dum
					}
					trigger_event = {
						id = elven.1806
						days = { 10 20 }
					}
				}
			}
		}
	}
}

elven.1810 = { # Maglor goes to Rivendell to seek Elrond and Glorfindel's aid
	content_source = realms
	type = character_event
	title = elven.1810.t
	desc = elven.1810.desc
	theme = family
	right_portrait = {
		character = scope:elf_1
		animation = marshal
	}

	left_portrait = {
		character = scope:elf_2
		animation = personality_bold
	}

	override_background = {
		reference = throne_room
	}

	immediate = {
		if = {
			limit = { character:linefinwe27 = { is_alive = yes } }
			character:linefinwe27 = { save_scope_as = elf_1 }
		}
		else = {
			create_character = {
				template = noldor_feanorian
				location = title:c_imladris.capital_province
				save_scope_as = elf_1
			}
		}
		if = {
			limit = { character:lineofglorfindel = { is_alive = yes } }
			character:lineofglorfindel = { save_scope_as = elf_2 }
		}
		else = {
			create_character = {
				template = noldor_feanorian
				location = title:c_imladris.capital_province
				save_scope_as = elf_2
			}
		}
		
		root.current_travel_plan ?= {
			add_companion = scope:elf_1
			add_companion = scope:elf_2
		}
	}

	option = { 
		name = elven.1810.a
	}
}

elven.1815 = { # Fight Balrog
	content_source = realms
	type = character_event
	# window = fullscreen_event_with_portrait # tour_arrival_event
	title = elven.1815.t
	desc = elven.1815.desc
	theme = stewardship_duty_focus

	right_portrait = {
		character = root
		animation = aggressive_sword
		camera = camera_event_right_wedding
	}

	left_portrait = {
		character = character:lineofglorfindel
		animation = aggressive_spear
		camera = camera_event_left_wedding
	}

	override_background = {
		reference = durins_bane
	}

	immediate = {
		current_travel_plan ?= {
			every_entourage_character = {
				limit = { is_elf = yes }
				add_to_list = elf_characters
			}
		}
		set_variable = {
			name = rand_var
			value = { 
				value = { 0 15 }
				round = yes
			}
		}
		set_variable = {
			name = neg_rand_var
			value = { value = var:rand_var.neg }
		}
	}

	option = { 
		name = elven.1815.a
		if = {
			limit = {
				AND = {
					any_in_list = {
						list = elf_characters
						this = character:linefinwe27
					}
					any_in_list = {
						list = elf_characters
						this = character:lineofglorfindel
					}
				}
			}
			random_list = {
				85 = {
					# modifier = { add = var:rand_var }
				}
				15 = {
					# modifier = { add = var:neg_rand_var }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						any_in_list = {
							list = elf_characters
							this = character:linefinwe27
						}
						NOT = {
							any_in_list = {
								list = elf_characters
								this = character:lineofglorfindel
							}
						}
					}
					AND = {
						any_in_list = {
							list = elf_characters
							this = character:lineofglorfindel
						}
						NOT = {
							any_in_list = {
								list = elf_characters
								this = character:linefinwe27
							}
						}
					}
				}
			}
			random_list = {
				70 = {
					# modifier = { add = var:rand_var }
				}
				30 = {
					# modifier = { add = var:neg_rand_var }
				}
			}
		}
		else = {
			random_list = {
				50 = {
					# modifier = { add = var:rand_var }
				}
				50 = {
					# modifier = { add = var:neg_rand_var }
				}
			}
		}
	}

	after = {
		remove_variable = rand_var
		remove_variable = neg_rand_var
		remove_variable = searched_khazad_dum
	}
}

elven.9999 = { #It burns !
	content_source = realms
	type = character_event
	title = elven.9999.t
	desc = elven.9999.desc
	theme = stewardship_wealth_focus
	right_portrait = {
		character = root
		animation = fear
	}
	
	trigger = {
		faith_is_evil = yes
	}
	
	option = { 
		name = elven.9999.a
		increase_wounds_no_death_effect = { REASON = burned }
	}
}